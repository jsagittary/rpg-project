// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `battleBalance.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.dykj.rpg.battle.ice.service;

public interface BattleCacheServicePrx extends Ice.ObjectPrx
{
    public boolean updateBattleCache(int battleId, byte[] data);

    public boolean updateBattleCache(int battleId, byte[] data, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_updateBattleCache(int battleId, byte[] data);

    public Ice.AsyncResult begin_updateBattleCache(int battleId, byte[] data, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_updateBattleCache(int battleId, byte[] data, Ice.Callback __cb);

    public Ice.AsyncResult begin_updateBattleCache(int battleId, byte[] data, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_updateBattleCache(int battleId, byte[] data, Callback_BattleCacheService_updateBattleCache __cb);

    public Ice.AsyncResult begin_updateBattleCache(int battleId, byte[] data, java.util.Map<String, String> __ctx, Callback_BattleCacheService_updateBattleCache __cb);

    public Ice.AsyncResult begin_updateBattleCache(int battleId, 
                                                   byte[] data, 
                                                   IceInternal.Functional_BoolCallback __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_updateBattleCache(int battleId, 
                                                   byte[] data, 
                                                   IceInternal.Functional_BoolCallback __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                   IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_updateBattleCache(int battleId, 
                                                   byte[] data, 
                                                   java.util.Map<String, String> __ctx, 
                                                   IceInternal.Functional_BoolCallback __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_updateBattleCache(int battleId, 
                                                   byte[] data, 
                                                   java.util.Map<String, String> __ctx, 
                                                   IceInternal.Functional_BoolCallback __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                   IceInternal.Functional_BoolCallback __sentCb);

    public boolean end_updateBattleCache(Ice.AsyncResult __result);

    public boolean askBattleCacheState(int battleId, byte[] data);

    public boolean askBattleCacheState(int battleId, byte[] data, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_askBattleCacheState(int battleId, byte[] data);

    public Ice.AsyncResult begin_askBattleCacheState(int battleId, byte[] data, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_askBattleCacheState(int battleId, byte[] data, Ice.Callback __cb);

    public Ice.AsyncResult begin_askBattleCacheState(int battleId, byte[] data, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_askBattleCacheState(int battleId, byte[] data, Callback_BattleCacheService_askBattleCacheState __cb);

    public Ice.AsyncResult begin_askBattleCacheState(int battleId, byte[] data, java.util.Map<String, String> __ctx, Callback_BattleCacheService_askBattleCacheState __cb);

    public Ice.AsyncResult begin_askBattleCacheState(int battleId, 
                                                     byte[] data, 
                                                     IceInternal.Functional_BoolCallback __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_askBattleCacheState(int battleId, 
                                                     byte[] data, 
                                                     IceInternal.Functional_BoolCallback __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                     IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_askBattleCacheState(int battleId, 
                                                     byte[] data, 
                                                     java.util.Map<String, String> __ctx, 
                                                     IceInternal.Functional_BoolCallback __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_askBattleCacheState(int battleId, 
                                                     byte[] data, 
                                                     java.util.Map<String, String> __ctx, 
                                                     IceInternal.Functional_BoolCallback __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                     IceInternal.Functional_BoolCallback __sentCb);

    public boolean end_askBattleCacheState(Ice.AsyncResult __result);

    public boolean removeBattleCache(int battleId);

    public boolean removeBattleCache(int battleId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_removeBattleCache(int battleId);

    public Ice.AsyncResult begin_removeBattleCache(int battleId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_removeBattleCache(int battleId, Ice.Callback __cb);

    public Ice.AsyncResult begin_removeBattleCache(int battleId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_removeBattleCache(int battleId, Callback_BattleCacheService_removeBattleCache __cb);

    public Ice.AsyncResult begin_removeBattleCache(int battleId, java.util.Map<String, String> __ctx, Callback_BattleCacheService_removeBattleCache __cb);

    public Ice.AsyncResult begin_removeBattleCache(int battleId, 
                                                   IceInternal.Functional_BoolCallback __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_removeBattleCache(int battleId, 
                                                   IceInternal.Functional_BoolCallback __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                   IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_removeBattleCache(int battleId, 
                                                   java.util.Map<String, String> __ctx, 
                                                   IceInternal.Functional_BoolCallback __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_removeBattleCache(int battleId, 
                                                   java.util.Map<String, String> __ctx, 
                                                   IceInternal.Functional_BoolCallback __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                   IceInternal.Functional_BoolCallback __sentCb);

    public boolean end_removeBattleCache(Ice.AsyncResult __result);

    public byte[] getBattleCache(int battleId);

    public byte[] getBattleCache(int battleId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getBattleCache(int battleId);

    public Ice.AsyncResult begin_getBattleCache(int battleId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getBattleCache(int battleId, Ice.Callback __cb);

    public Ice.AsyncResult begin_getBattleCache(int battleId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getBattleCache(int battleId, Callback_BattleCacheService_getBattleCache __cb);

    public Ice.AsyncResult begin_getBattleCache(int battleId, java.util.Map<String, String> __ctx, Callback_BattleCacheService_getBattleCache __cb);

    public Ice.AsyncResult begin_getBattleCache(int battleId, 
                                                IceInternal.Functional_GenericCallback1<byte[]> __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_getBattleCache(int battleId, 
                                                IceInternal.Functional_GenericCallback1<byte[]> __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_getBattleCache(int battleId, 
                                                java.util.Map<String, String> __ctx, 
                                                IceInternal.Functional_GenericCallback1<byte[]> __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_getBattleCache(int battleId, 
                                                java.util.Map<String, String> __ctx, 
                                                IceInternal.Functional_GenericCallback1<byte[]> __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                IceInternal.Functional_BoolCallback __sentCb);

    public byte[] end_getBattleCache(Ice.AsyncResult __result);
}
