// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `game2battleCache.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.dykj.rpg.battle.ice.service;

public interface Game2BattleCacheServicePrx extends Ice.ObjectPrx
{
    public boolean pingBattleCache(int serverId);

    public boolean pingBattleCache(int serverId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_pingBattleCache(int serverId);

    public Ice.AsyncResult begin_pingBattleCache(int serverId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_pingBattleCache(int serverId, Ice.Callback __cb);

    public Ice.AsyncResult begin_pingBattleCache(int serverId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_pingBattleCache(int serverId, Callback_Game2BattleCacheService_pingBattleCache __cb);

    public Ice.AsyncResult begin_pingBattleCache(int serverId, java.util.Map<String, String> __ctx, Callback_Game2BattleCacheService_pingBattleCache __cb);

    public Ice.AsyncResult begin_pingBattleCache(int serverId, 
                                                 IceInternal.Functional_BoolCallback __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_pingBattleCache(int serverId, 
                                                 IceInternal.Functional_BoolCallback __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                 IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_pingBattleCache(int serverId, 
                                                 java.util.Map<String, String> __ctx, 
                                                 IceInternal.Functional_BoolCallback __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_pingBattleCache(int serverId, 
                                                 java.util.Map<String, String> __ctx, 
                                                 IceInternal.Functional_BoolCallback __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                 IceInternal.Functional_BoolCallback __sentCb);

    public boolean end_pingBattleCache(Ice.AsyncResult __result);

    public boolean enterToBattleCache(int serverId, int playerId, byte[] data);

    public boolean enterToBattleCache(int serverId, int playerId, byte[] data, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_enterToBattleCache(int serverId, int playerId, byte[] data);

    public Ice.AsyncResult begin_enterToBattleCache(int serverId, int playerId, byte[] data, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_enterToBattleCache(int serverId, int playerId, byte[] data, Ice.Callback __cb);

    public Ice.AsyncResult begin_enterToBattleCache(int serverId, int playerId, byte[] data, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_enterToBattleCache(int serverId, int playerId, byte[] data, Callback_Game2BattleCacheService_enterToBattleCache __cb);

    public Ice.AsyncResult begin_enterToBattleCache(int serverId, int playerId, byte[] data, java.util.Map<String, String> __ctx, Callback_Game2BattleCacheService_enterToBattleCache __cb);

    public Ice.AsyncResult begin_enterToBattleCache(int serverId, 
                                                    int playerId, 
                                                    byte[] data, 
                                                    IceInternal.Functional_BoolCallback __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_enterToBattleCache(int serverId, 
                                                    int playerId, 
                                                    byte[] data, 
                                                    IceInternal.Functional_BoolCallback __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                    IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_enterToBattleCache(int serverId, 
                                                    int playerId, 
                                                    byte[] data, 
                                                    java.util.Map<String, String> __ctx, 
                                                    IceInternal.Functional_BoolCallback __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_enterToBattleCache(int serverId, 
                                                    int playerId, 
                                                    byte[] data, 
                                                    java.util.Map<String, String> __ctx, 
                                                    IceInternal.Functional_BoolCallback __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                    IceInternal.Functional_BoolCallback __sentCb);

    public boolean end_enterToBattleCache(Ice.AsyncResult __result);
}
