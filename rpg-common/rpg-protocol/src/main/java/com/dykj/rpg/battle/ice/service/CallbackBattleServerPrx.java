// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `battle2battleCache.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.dykj.rpg.battle.ice.service;

public interface CallbackBattleServerPrx extends Ice.ObjectPrx
{
    public boolean enterToBattle(byte[] data);

    public boolean enterToBattle(byte[] data, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_enterToBattle(byte[] data);

    public Ice.AsyncResult begin_enterToBattle(byte[] data, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_enterToBattle(byte[] data, Ice.Callback __cb);

    public Ice.AsyncResult begin_enterToBattle(byte[] data, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_enterToBattle(byte[] data, Callback_CallbackBattleServer_enterToBattle __cb);

    public Ice.AsyncResult begin_enterToBattle(byte[] data, java.util.Map<String, String> __ctx, Callback_CallbackBattleServer_enterToBattle __cb);

    public Ice.AsyncResult begin_enterToBattle(byte[] data, 
                                               IceInternal.Functional_BoolCallback __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_enterToBattle(byte[] data, 
                                               IceInternal.Functional_BoolCallback __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                               IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_enterToBattle(byte[] data, 
                                               java.util.Map<String, String> __ctx, 
                                               IceInternal.Functional_BoolCallback __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_enterToBattle(byte[] data, 
                                               java.util.Map<String, String> __ctx, 
                                               IceInternal.Functional_BoolCallback __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                               IceInternal.Functional_BoolCallback __sentCb);

    public boolean end_enterToBattle(Ice.AsyncResult __result);

    public int getRunningBattleCount();

    public int getRunningBattleCount(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getRunningBattleCount();

    public Ice.AsyncResult begin_getRunningBattleCount(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getRunningBattleCount(Ice.Callback __cb);

    public Ice.AsyncResult begin_getRunningBattleCount(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getRunningBattleCount(Callback_CallbackBattleServer_getRunningBattleCount __cb);

    public Ice.AsyncResult begin_getRunningBattleCount(java.util.Map<String, String> __ctx, Callback_CallbackBattleServer_getRunningBattleCount __cb);

    public Ice.AsyncResult begin_getRunningBattleCount(IceInternal.Functional_IntCallback __responseCb, 
                                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_getRunningBattleCount(IceInternal.Functional_IntCallback __responseCb, 
                                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                       IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_getRunningBattleCount(java.util.Map<String, String> __ctx, 
                                                       IceInternal.Functional_IntCallback __responseCb, 
                                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_getRunningBattleCount(java.util.Map<String, String> __ctx, 
                                                       IceInternal.Functional_IntCallback __responseCb, 
                                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                       IceInternal.Functional_BoolCallback __sentCb);

    public int end_getRunningBattleCount(Ice.AsyncResult __result);
}
