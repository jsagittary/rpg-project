<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
    <!--	<bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource"
            destroy-method="close">
            <property name="driverClass" value="${bonecp.driverClass}" />
            <property name="jdbcUrl" value="${game.jdbcUrl}" />
            <property name="username" value="${game.username}" />
            <property name="password" value="${game.password}" />
            <property name="idleConnectionTestPeriodInMinutes" value="${bonecp.idleConnectionTestPeriodInMinutes}" />
            <property name="idleMaxAgeInSeconds" value="${bonecp.idleMaxAgeInSeconds}" />
            <property name="maxConnectionsPerPartition" value="${bonecp.maxConnectionsPerPartition}" />
            <property name="minConnectionsPerPartition" value="${bonecp.minConnectionsPerPartition}" />
            <property name="partitionCount" value="${bonecp.partitionCount}" />
            <property name="acquireIncrement" value="${bonecp.acquireIncrement}" />
            <property name="statementsCacheSize" value="${bonecp.statementsCacheSize}" />
        </bean>-->

    <bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password127.0.0.1 -->
        <property name="driverClassName" value="${bonecp.driverClass}"/>
        <property name="url" value="${game.jdbcUrl}"/>
        <property name="username" value="${game.username}"/>
        <property name="password" value="${game.password}"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="20"/>
        <property name="minIdle" value="20"/>
        <property name="maxActive" value="100"/>
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <!-- 验证连接有效与否的SQL，不同的数据配置不同 -->
        <property name="validationQuery" value="SELECT 1"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="false"/>
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="256"/>
        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat"/>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="druidDataSource"/>
    </bean>

    <!-- 将上方配置的jdbc加入jdbcPoolMap,记住Map的Key,代码中需要通过这个Key进行操作不同数据库 -->
    <bean id="jdbcPoolMap" class="java.util.HashMap">
        <constructor-arg>
            <map>
                <entry key="DEFAULT_DATASOURCE" value-ref="jdbcTemplate"/>
            </map>
        </constructor-arg>
    </bean>
    <!-- 3.配置JDBC事务管理器 -->
    <bean id="txManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 注入数据源 -->
        <property name="dataSource" ref="druidDataSource"/>
    </bean>
    <!-- 4.采用@Transaction注解方式使用事务 -->
    <tx:annotation-driven transaction-manager="txManager"/>

    <bean id="dbQueueManager" class="com.dykj.rpg.db.queue.DbQueueManager" factory-method="getInstance" init-method="init">
        <!--表与表之间的入库间隔 秒-->
        <property name="initialDelay" value="10"/>
        <!--单个表入库的循环周期 秒-->
        <property name="period" value="10"/>

    </bean>
</beans>
